<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title>hzlei</title><subtitle>Internet for people, not profit</subtitle><link href="https://hzleii.github.io/index.xml" rel="self"/><link href="https://hzleii.github.io"/><icon>https://cdn.jsdelivr.net/npm/@dsrca/cdn@1.1.1/lib/favicon/favicon.ico</icon><id>https://hzleii.github.io</id><author><name>磊子</name></author><rights>本站内容采用 CC BY-NC-SA 4.0 许可，请注明出处；商业转载请联系作者授权。</rights><updated>2023-05-31T13:36:43Z</updated><generator uri="https://gohugo.io/" version="0.112.5">Hugo</generator><entry><title>MySQL 行转列，列转行</title><link href="https://hzleii.github.io/post/row2column/"/><id>https://hzleii.github.io/post/row2column/</id><summary type="html">行转列 即将原本同一列下多行的不同内容作为多个字段，输出对应内容 测试数据 建表： DROP TABLE IF EXISTS TB_SCORE; CREATE TABLE TB_SCORE ( ID INT ( 11 ) NOT NULL auto_increment, USER_ID VARCHAR ( 20 ) NOT NULL COMMENT '用户id',</summary><content type="text/html" src="https://hzleii.github.io/post/row2column/"/><published>2021-06-08T00:00:00Z</published><updated>2021-06-08T00:00:00Z</updated></entry><entry><title>Java8 Stream 流操作</title><link href="https://hzleii.github.io/post/stream/"/><id>https://hzleii.github.io/post/stream/</id><summary type="html">什么是 Stream Stream翻译称为 “流”，是 Java8 的新特性之一。 Stream将要处理的元素看作是流，这时可以借助Stream API对流中的元素进行中间</summary><content type="text/html" src="https://hzleii.github.io/post/stream/"/><published>2021-06-07T00:00:00Z</published><updated>2021-06-07T00:00:00Z</updated></entry><entry><title>vi/vim 的基本用法</title><link href="https://hzleii.github.io/post/viim/"/><id>https://hzleii.github.io/post/viim/</id><summary type="html">vi/vim 的基本用法 简介 所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。 但是目前我们使用比较多的是 vim 编辑器。 vim 具有程序编辑的能力</summary><content type="text/html" src="https://hzleii.github.io/post/viim/"/><published>2021-02-03T22:14:45Z</published><updated>2021-02-03T22:14:45Z</updated></entry><entry><title>JVM面试问题总结</title><link href="https://hzleii.github.io/post/jvm%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/><id>https://hzleii.github.io/post/jvm%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</id><summary type="html">JVM 篇 1. 什么情况下会发生栈内存溢出 在 HotSpot 虚拟机中是不区分虚拟机栈和本地方法栈，栈是线程私有的，它的生命周期与线程相同，每个方法在执行的时候都会创</summary><content type="text/html" src="https://hzleii.github.io/post/jvm%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/><published>2021-01-13T22:15:45Z</published><updated>2021-01-13T22:15:45Z</updated></entry><entry><title>Linux 常用命令</title><link href="https://hzleii.github.io/post/linuxinstruction/"/><id>https://hzleii.github.io/post/linuxinstruction/</id><summary type="html">cd cd （change directory：英文释义是改变目录）切换目录 cd ../ ;跳到上级目录 cd /opt ;不管现在到那直接跳到指定的opt文件夹中 cd ~ ;切换</summary><content type="text/html" src="https://hzleii.github.io/post/linuxinstruction/"/><published>2020-08-13T00:00:00Z</published><updated>2020-08-13T00:00:00Z</updated></entry><entry><title>Java-插入排序</title><link href="https://hzleii.github.io/post/java-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/><id>https://hzleii.github.io/post/java-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</id><summary type="html">Java-插入排序（复杂度为O(n2) ） 简要说明 插入排序是一种最简单的排序方法，它的基本思想是从数组中逐个元素作为插入元素，和前面的进行比较</summary><content type="text/html" src="https://hzleii.github.io/post/java-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/><published>2020-07-22T21:01:24Z</published><updated>2020-07-22T21:01:24Z</updated></entry><entry><title>Java-选择排序</title><link href="https://hzleii.github.io/post/java-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/><id>https://hzleii.github.io/post/java-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</id><summary type="html">Java-选择排序（时间复杂度为O(n²) ） 简要说明 首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置。 再从剩余未排序元素中继续</summary><content type="text/html" src="https://hzleii.github.io/post/java-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/"/><published>2020-07-22T21:01:24Z</published><updated>2020-07-22T21:01:24Z</updated></entry><entry><title>SpringCloud底层服务之间是怎样互相调用的</title><link href="https://hzleii.github.io/post/springcloud%E5%BA%95%E5%B1%82%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E6%98%AF%E6%80%8E%E6%A0%B7%E4%BA%92%E7%9B%B8%E8%B0%83%E7%94%A8%E7%9A%84/"/><id>https://hzleii.github.io/post/springcloud%E5%BA%95%E5%B1%82%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E6%98%AF%E6%80%8E%E6%A0%B7%E4%BA%92%E7%9B%B8%E8%B0%83%E7%94%A8%E7%9A%84/</id><summary type="html">SpringCloud底层服务之间是怎样互相调用的 ? 概述 毫无疑问，Spring Cloud是目前微服务架构领域的翘楚，无数的书籍博客都在讲解这</summary><content type="text/html" src="https://hzleii.github.io/post/springcloud%E5%BA%95%E5%B1%82%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E6%98%AF%E6%80%8E%E6%A0%B7%E4%BA%92%E7%9B%B8%E8%B0%83%E7%94%A8%E7%9A%84/"/><published>2020-07-20T23:40:32Z</published><updated>2020-07-20T23:40:32Z</updated></entry><entry><title>Java-快速排序</title><link href="https://hzleii.github.io/post/java-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/><id>https://hzleii.github.io/post/java-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</id><summary type="html">Java-快速排序（时间复杂度：O(N*logN) ） 简要说明 快速排序由C. A. R. Hoare在1960年提出。 它的基本思想是：通过一趟排序将要排</summary><content type="text/html" src="https://hzleii.github.io/post/java-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/><published>2020-07-20T23:39:24Z</published><updated>2020-07-20T23:39:24Z</updated></entry><entry><title>CentOS下Docker安装步骤</title><link href="https://hzleii.github.io/post/centos%E4%B8%8Bdocker%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/"/><id>https://hzleii.github.io/post/centos%E4%B8%8Bdocker%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</id><summary type="html">CentOS下Docker安装步骤 1. Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。 查看当前内核版本</summary><content type="text/html" src="https://hzleii.github.io/post/centos%E4%B8%8Bdocker%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/"/><published>2020-07-20T21:01:24Z</published><updated>2020-07-20T21:01:24Z</updated></entry><entry><title>Git使用总结</title><link href="https://hzleii.github.io/post/git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/><id>https://hzleii.github.io/post/git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</id><summary type="html">Git使用总结 本地库初始化 命令：git init 设置签名 用户名：hzlei email：hzlei@foxmail.com 作用：区分不同开发工作人员的</summary><content type="text/html" src="https://hzleii.github.io/post/git%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/><published>2020-07-20T21:01:24Z</published><updated>2020-07-20T21:01:24Z</updated></entry><entry><title>Java-冒泡排序</title><link href="https://hzleii.github.io/post/java-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/><id>https://hzleii.github.io/post/java-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</id><summary type="html">Java-冒泡排序 简要说明 依次比较两个相邻的元素 动图展示 代码展示 public class BubbleSort { public static void main(String[] args) { // TODO Auto-generated method stub int[] arr = {3, 44, 38, 5, 47, 15, 36, 26, 27, 2, 46, 4, 19, 50, 48}; for (int i = 0;</summary><content type="text/html" src="https://hzleii.github.io/post/java-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/><published>2020-07-20T21:00:24Z</published><updated>2020-07-20T21:00:24Z</updated></entry></feed>